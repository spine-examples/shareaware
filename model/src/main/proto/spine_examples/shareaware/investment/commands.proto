/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine_examples.shareaware.investment;

import "spine/options.proto";

option (type_url_prefix) = "type.shareaware.spine.io";
option java_package = "io.spine.examples.shareaware.investment.command";
option java_outer_classname = "CommandsProto";
option java_multiple_files = true;

import "spine_examples/shareaware/identifiers.proto";

// A command to add shares to the investment.
message AddShares {

    // The ID of the investment where shares wants to be added.
    InvestmentId investment = 1;

    // The ID of the process that wants to add shares to investment.
    PurchaseId process = 2 [(required) = true];

    // The number of shares to add.
    int32 quantity = 3 [(required) = true];
}

// A command to reserve shares for their sale.
message ReserveShares {

    // The ID of the investment where to reserve shares.
    InvestmentId investment = 1;

    // The ID of the process that is about to reserve shares.
    SaleId process = 2 [(required) = true];

    // The quantity of shares to reserve.
    int32 quantity = 3 [(required) = true];
}

// A command to complete the shares reservation.
//
// This command means that the shares sale operation is about to end successfully
// so the reservation needed to be completed and shares from investment completely removed.
//
message CompleteSharesReservation {

    // The ID of the investment where to close the reservation.
    InvestmentId investment = 1;

    // The ID of the sale process that is about to close the shares reservation.
    SaleId process = 2 [(required) = true];
}

// A command to cancel the shares reservation.
//
// This command means that something went wrong in the shares sale operation
// so now the reservation needed to be canceled
// and previously reserved shares should become available again.
//
message CancelSharesReservation {

    // The ID of the investment where to cancel the shares reservation.
    InvestmentId investment = 1;

    // The ID of the sale process that is about to cancel the shares reservation.
    SaleId process = 2 [(required) = true];
}
