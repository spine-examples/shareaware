/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine_examples.shareaware;

import "spine/options.proto";

option (type_url_prefix) = "type.shareaware.spine.io";
option java_package = "io.spine.examples.shareaware";
option java_outer_classname = "IdentifiersProto";
option java_multiple_files = true;

import "spine/core/user_id.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// Identifies a watchlist.
message WatchlistId {
    string uuid = 1 [(required) = true];
}

// Identifies a share.
message ShareId {
    string uuid = 1 [(required) = true];
}

// Identifies a wallet.
message WalletId {
    spine.core.UserId owner = 1 [(required) = true];
}

// Identifies a wallet replenishment process.
message ReplenishmentId {
    string uuid = 1 [(required) = true];
}

// Identifies a payment gateway.
message PaymentGatewayId {
    string uuid = 1 [(required) = true];
}

// Identifies a wallet withdrawal process.
message WithdrawalId {
    string uuid = 1 [(required) = true];
}

// Identifies an investment.
message InvestmentId {

    ShareId share = 1 [(required) = true];

    spine.core.UserId owner = 2 [(required) = true];
}

// Identifies a shares purchase process.
message PurchaseId {
    string uuid = 1 [(required) = true];
}

// Identifies the operation that reserve and withdraw money from the wallet.
message WithdrawalOperationId {

    oneof type {

        // The ID of the `WalletWithdrawal` process
        // that withdraws money from the wallet to the user's bank account.
        WithdrawalId withdrawal = 1;

        // The ID of the `SharesPurchase` process
        // that withdraws money from the user's wallet for shares purchase.
        PurchaseId purchase = 2;
    }
}

// Identifies the shares market.
message MarketId {
    string uuid = 1 [(required) = true];
}

// Identifies a shares sale process.
message SaleId {
    string uuid = 1 [(required) = true];
}

// Identifies the operation that replenishes the wallet.
message ReplenishmentOperationId {

    oneof type {

        // The ID of the `WalletReplenishment` process
        // that replenishes the wallet from the user's bank account.
        ReplenishmentId replenishment = 1;

        // The ID of the `SharesSale` process
        // that replenishes the wallet by selling the user's shares on the market.
        SaleId sale = 2;
    }
}

message SharePriceMovementId {

    ShareId share = 1 [(required) = true, (column) = true];

    google.protobuf.Duration time_range = 2 [(required) = true];

    google.protobuf.Timestamp when_created = 3 [(required) = true];
}
