/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine_examples.shareaware.wallet;

import "spine/options.proto";

option (type_url_prefix) = "type.shareaware.spine.io";
option java_package = "io.spine.examples.shareaware.wallet.command";
option java_outer_classname = "CommandsProto";
option java_multiple_files = true;

import "spine_examples/shareaware/identifiers.proto";
import "spine/money/money.proto";

// A command to create a new wallet.
message CreateWallet {

    // The ID of the wallet to create.
    WalletId wallet = 1;
}

// A command to recharge the balance of wallet.
message RechargeBalance {

    // The ID of the wallet whose balance must be recharged.
    WalletId wallet = 1;

    // The ID of the operation that invokes the balance recharging.
    ReplenishmentOperationId operation = 2 [(required) = true];

    // The amount of money by which the wallet balance must be recharged.
    spine.money.Money money_amount = 3 [(required) = true];
}

// A command to reserve money for pending monetary operation.
message ReserveMoney {

    // The ID of the wallet on which the money wanted to be reserved.
    WalletId wallet = 1;

    // The ID of the pending operation that wants to reserve money.
    WithdrawalOperationId operation = 2 [(required) = true];

    // Wanted amount of money to be reserved.
    spine.money.Money amount = 3 [(required) = true];
}

// A command to debit the reserved money.
//
// This command means that money that was reserved before by the monetary operation
// needs to be completely debited.
// Only this operation with its specific ID can withdraw the money reserved by it before.
//
message DebitReservedMoney {

    // The ID of the wallet where money was reserved.
    WalletId wallet = 1;

    // The ID of the operation that wants to debit the reserved money.
    WithdrawalOperationId operation = 2 [(required) = true];
}

// A command to cancel money reservation.
//
// This command means that something went wrong in the monetary operation process
// and now the money reservation that was made before needs to be canceled.
//
message CancelMoneyReservation {

    // The ID of the wallet where money was reserved.
    WalletId wallet = 1;

    // The ID of the operation that wants to cancel the money reservation.
    WithdrawalOperationId operation = 2 [(required) = true];
}
