/*
 * Copyright 2023, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine_examples.shareaware.wallet;

import "spine/options.proto";

option (type_url_prefix) = "type.shareaware.spine.io";
option java_package = "io.spine.examples.shareaware.wallet";
option java_outer_classname = "WalletProto";
option java_multiple_files = true;

import "spine/core/user_id.proto";
import "spine/money/money.proto";
import "spine_examples/shareaware/identifiers.proto";
import "spine_examples/shareaware/wallet/iban.proto";

// Represents an amount of user's money.
message Wallet {
    option (entity) = {kind: AGGREGATE};

    // The ID of the wallet.
    WalletId id = 1;

    // The balance of the wallet.
    //
    // The currently available (not reserved) amount of the user's money that the user can spend or cash out.
    // Also, the balance can be replenished from the bank account or by selling shares.
    // The currency for the balance is United States Dollar.
    //
    spine.money.Money balance = 2;

    // The binding of `WithdrawalId` to the amount of money reserved by it.
    //
    // Many withdrawal operations may interact with this wallet
    // and make money reservations for their needs.
    // The amount of money is considered reserved because no one can use this amount
    // except the operation that reserved it.
    //
    // The first generic in the `reserved_money` map is meant to be the `WithdrawalId` value.
    //
    map<string, spine.money.Money> reserved_money = 3;
}

// The process of wallet replenishment.
message WalletReplenishment {
    option (entity).kind = PROCESS_MANAGER;

    // The ID of the replenishment process.
    ReplenishmentId id = 1;

    // The ID of the wallet to replenish.
    WalletId wallet = 2;
}

// The process of wallet withdrawal.
message WalletWithdrawal {
    option (entity).kind = PROCESS_MANAGER;

    // The ID of the withdrawal process.
    WithdrawalId id = 1;

    // The ID of the wallet from where to withdraw money.
    WalletId wallet = 2 [(required) = true];

    // The IBAN of the recipient.
    Iban recipient = 3 [(required) = true];
}
